{"version":3,"file":"bundle.esm.js","sources":["../src/node_browser_detect_agent.ts","../src/node_browser_detect_agent_info.ts","../src/node_browser_detect_agent_node.ts"],"sourcesContent":["import { AgentFunction } from \"graphai\";\nimport { EnvConfig, EnvFunc } from \"./type\";\n\nexport const nodeBrowserDetectAgentGenerator = (isNode: boolean, envConf: EnvConfig, envFunc: EnvFunc) => {\n  const nodeBrowserDetectAgent: AgentFunction = async ({ params, namedInputs }) => {\n    console.log(isNode);\n    console.log(envConf);\n    console.log(envFunc());\n    return { params, namedInputs };\n  };\n  return nodeBrowserDetectAgent;\n};\n","import { AgentFunctionInfo, AgentFunction } from \"graphai\";\n\nconst nodeBrowserDetectAgentInfoGenerator = (nodeBrowserDetectAgent: AgentFunction) => {\n  const nodeBrowserDetectAgentInfo: AgentFunctionInfo = {\n    name: \"nodeBrowserDetectAgent\",\n    agent: nodeBrowserDetectAgent,\n    mock: nodeBrowserDetectAgent,\n    samples: [\n      {\n        params: { a: \"1\" },\n        inputs: { b: \"2\" },\n        result: {\n          params: { a: \"1\" },\n          namedInputs: { b: \"2\" },\n        },\n      },\n    ],\n    description: \"test agent\",\n    category: [\"general\"],\n    author: \"Receptron Team\",\n    repository: \"https://github.com/receptron/graphai/\",\n    license: \"MIT\",\n  };\n  return nodeBrowserDetectAgentInfo;\n};\n\nexport { nodeBrowserDetectAgentInfoGenerator };\n","import { nodeBrowserDetectAgentGenerator } from \"./node_browser_detect_agent\";\nimport { nodeBrowserDetectAgentInfoGenerator } from \"./node_browser_detect_agent_info\";\nimport { EnvConfig, EnvFunc } from \"./type\";\n\nconst envConf: EnvConfig = {\n  envType: \"Node\",\n};\n\nconst envFunc: EnvFunc = () => {\n  return { message: \"isnode\" };\n};\n\nexport const nodeBrowserDetectAgent = nodeBrowserDetectAgentGenerator(true, envConf, envFunc);\n\nconst nodeBrowserDetectAgentInfo = nodeBrowserDetectAgentInfoGenerator(nodeBrowserDetectAgent);\n\nexport default nodeBrowserDetectAgentInfo;\n"],"names":[],"mappings":"AAGO,MAAM,+BAA+B,GAAG,CAAC,MAAe,EAAE,OAAkB,EAAE,OAAgB,KAAI;IACvG,MAAM,sBAAsB,GAAkB,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAI;AAC9E,QAAA,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;AACnB,QAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;AACpB,QAAA,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;AACtB,QAAA,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE;AAChC,KAAC;AACD,IAAA,OAAO,sBAAsB;AAC/B,CAAC;;ACTD,MAAM,mCAAmC,GAAG,CAAC,sBAAqC,KAAI;AACpF,IAAA,MAAM,0BAA0B,GAAsB;AACpD,QAAA,IAAI,EAAE,wBAAwB;AAC9B,QAAA,KAAK,EAAE,sBAAsB;AAC7B,QAAA,IAAI,EAAE,sBAAsB;AAC5B,QAAA,OAAO,EAAE;AACP,YAAA;AACE,gBAAA,MAAM,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE;AAClB,gBAAA,MAAM,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE;AAClB,gBAAA,MAAM,EAAE;AACN,oBAAA,MAAM,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE;AAClB,oBAAA,WAAW,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE;AACxB,iBAAA;AACF,aAAA;AACF,SAAA;AACD,QAAA,WAAW,EAAE,YAAY;QACzB,QAAQ,EAAE,CAAC,SAAS,CAAC;AACrB,QAAA,MAAM,EAAE,gBAAgB;AACxB,QAAA,UAAU,EAAE,uCAAuC;AACnD,QAAA,OAAO,EAAE,KAAK;KACf;AACD,IAAA,OAAO,0BAA0B;AACnC,CAAC;;ACpBD,MAAM,OAAO,GAAc;AACzB,IAAA,OAAO,EAAE,MAAM;CAChB;AAED,MAAM,OAAO,GAAY,MAAK;AAC5B,IAAA,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC9B,CAAC;AAEM,MAAM,sBAAsB,GAAG,+BAA+B,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC;AAE7F,MAAM,0BAA0B,GAAG,mCAAmC,CAAC,sBAAsB;;;;"}